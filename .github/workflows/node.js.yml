# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

#     strategy:
#       matrix:
#         node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
   
 
    steps:
    - uses: actions/checkout@v3
    - name: Start Job
      uses: actions/setup-node@v3
    - run: echo "Let Start"
    
    - name: Failed Action
      uses: actions/setup-node@v3
    - run: exit 0
    
    - name: Run Without Condition
      uses: actions/setup-node@v3
    - run: echo "i am in with no condition"
    
    - name: Run Test In Success/Failed Condition
      if: always()
      uses: actions/setup-node@v3
    - run: echo "Run with Condition"
      if: always()
      
#     - name: Slack Notification
#       uses: act10ns/slack@v1
#       env: 
#         SLACK_MESSAGE: 'Post Content :rocket:'
#         SLACK_TITLE: Post Title
#       with: 
#         status: ${{ job.status }}
#         channel: '@lukheebalo'
#         steps: ${{ toJson(steps) }}
#         message: Deployed {{ env.GITHUB_REF_NAME }} branch, by {{ env.GITHUB_ACTOR }} ${{job.status}}
#       if: always()  
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: general
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_MESSAGE: 'Post Content :rocket:'
        SLACK_TITLE: Post Title
        SLACK_USERNAME: rtCamp
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL  }}
      if: always()  
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
